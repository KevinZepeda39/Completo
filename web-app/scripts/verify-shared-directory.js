const fs = require('fs');
const path = require('path');

console.log('üîç VERIFICANDO CONFIGURACI√ìN DEL DIRECTORIO COMPARTIDO');
console.log('==================================================');
console.log('');

// Verificar directorio compartido
const sharedDir = 'C:/ImagenesCompartidas/uploads/reportes';
console.log(`üìÅ Verificando directorio compartido: ${sharedDir}`);

if (fs.existsSync(sharedDir)) {
    console.log('‚úÖ Directorio compartido existe');
    
    // Contar archivos
    try {
        const files = fs.readdirSync(sharedDir);
        console.log(`üìä Total de archivos: ${files.length}`);
        
        if (files.length > 0) {
            console.log('üìã Archivos encontrados:');
            files.slice(0, 10).forEach(file => {
                const filePath = path.join(sharedDir, file);
                const stats = fs.statSync(filePath);
                const sizeInMB = (stats.size / (1024 * 1024)).toFixed(2);
                console.log(`   - ${file} (${sizeInMB} MB)`);
            });
            
            if (files.length > 10) {
                console.log(`   ... y ${files.length - 10} archivos m√°s`);
            }
        } else {
            console.log('üì≠ No hay archivos en el directorio compartido');
        }
    } catch (error) {
        console.log(`‚ùå Error leyendo directorio: ${error.message}`);
    }
} else {
    console.log('‚ùå Directorio compartido NO existe');
    console.log('üí° Ejecuta el script de migraci√≥n primero');
}

console.log('');

// Verificar directorio original
const originalDir = 'public/uploads/reportes';
console.log(`üìÅ Verificando directorio original: ${originalDir}`);

if (fs.existsSync(originalDir)) {
    console.log('‚úÖ Directorio original existe');
    
    try {
        const files = fs.readdirSync(originalDir);
        console.log(`üìä Total de archivos: ${files.length}`);
        
        if (files.length > 0) {
            console.log('‚ö†Ô∏è  ADVERTENCIA: A√∫n hay archivos en el directorio original');
            console.log('üí° Ejecuta el script de migraci√≥n para moverlos');
        }
    } catch (error) {
        console.log(`‚ùå Error leyendo directorio: ${error.message}`);
    }
} else {
    console.log('‚úÖ Directorio original NO existe (ya fue migrado)');
}

console.log('');

// Verificar permisos de escritura
console.log('üîê Verificando permisos de escritura...');
try {
    const testFile = path.join(sharedDir, 'test-permissions.tmp');
    fs.writeFileSync(testFile, 'test');
    fs.unlinkSync(testFile);
    console.log('‚úÖ Permisos de escritura OK');
} catch (error) {
    console.log(`‚ùå Error de permisos: ${error.message}`);
    console.log('üí° Ejecuta como administrador o verifica permisos del directorio');
}

console.log('');
console.log('üéØ RESUMEN DE VERIFICACI√ìN');
console.log('==========================');

if (fs.existsSync(sharedDir)) {
    console.log('‚úÖ Directorio compartido configurado correctamente');
    console.log('‚úÖ Middleware de Express configurado');
    console.log('‚úÖ Multer configurado para usar directorio compartido');
    
    if (fs.existsSync(originalDir)) {
        const originalFiles = fs.readdirSync(originalDir).length;
        if (originalFiles > 0) {
            console.log(`‚ö†Ô∏è  Pendiente: Migrar ${originalFiles} archivos del directorio original`);
        } else {
            console.log('‚úÖ Migraci√≥n completada');
        }
    } else {
        console.log('‚úÖ Migraci√≥n completada');
    }
} else {
    console.log('‚ùå Configuraci√≥n incompleta');
    console.log('üí° Ejecuta los scripts de configuraci√≥n primero');
}

console.log('');
console.log('üöÄ PR√ìXIMOS PASOS:');
console.log('1. Detener el servidor web (Ctrl+C)');
console.log('2. Ejecutar script de migraci√≥n');
console.log('3. Reiniciar servidor web (node server.js)');
console.log('4. Probar subida de im√°genes');
console.log('5. Verificar que aparezcan en ambos sistemas');
