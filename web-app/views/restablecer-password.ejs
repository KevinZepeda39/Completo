<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= titulo %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .reset-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            padding: 40px;
            max-width: 500px;
            width: 100%;
            text-align: center;
        }
        
        .reset-icon {
            font-size: 4rem;
            color: #28a745;
            margin-bottom: 20px;
        }
        
        .reset-title {
            color: #333;
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 15px;
        }
        
        .reset-subtitle {
            color: #666;
            font-size: 1rem;
            margin-bottom: 30px;
            line-height: 1.6;
        }
        
        .form-control {
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            padding: 15px 20px;
            font-size: 1rem;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        }
        
        .form-control:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40,167,69,0.25);
            outline: none;
        }
        
        .password-strength {
            margin-bottom: 20px;
            text-align: left;
        }
        
        .strength-bar {
            height: 8px;
            background-color: #e1e5e9;
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 10px;
        }
        
        .strength-fill {
            height: 100%;
            transition: all 0.3s ease;
            border-radius: 4px;
        }
        
        .strength-weak { background-color: #dc3545; width: 25%; }
        .strength-fair { background-color: #ffc107; width: 50%; }
        .strength-good { background-color: #17a2b8; width: 75%; }
        .strength-strong { background-color: #28a745; width: 100%; }
        
        .strength-text {
            font-size: 0.9rem;
            color: #666;
        }
        
        .reset-btn {
            background: linear-gradient(45deg, #28a745, #20c997);
            border: none;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-bottom: 20px;
        }
        
        .reset-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(40,167,69,0.3);
        }
        
        .reset-btn:disabled {
            background: #6c757d;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .back-link {
            color: #007bff;
            text-decoration: none;
            font-size: 0.9rem;
            display: inline-block;
            margin-top: 20px;
        }
        
        .back-link:hover {
            color: #0056b3;
            text-decoration: underline;
        }
        
        .alert {
            border-radius: 12px;
            margin-bottom: 20px;
        }
        
        .password-requirements {
            text-align: left;
            margin-bottom: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #007bff;
        }
        
        .requirement {
            margin-bottom: 8px;
            font-size: 0.9rem;
            color: #666;
        }
        
        .requirement.met {
            color: #28a745;
        }
        
        .requirement i {
            margin-right: 8px;
        }
    </style>
</head>
<body>
    <div class="reset-card">
        <div class="reset-icon">
            <i class="fas fa-lock-open"></i>
        </div>
        
        <h1 class="reset-title">Restablecer Contraseña</h1>
        <p class="reset-subtitle">
            Ingresa tu nueva contraseña para completar el proceso
        </p>
        
        <% if (error) { %>
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-triangle"></i>
                <%= error %>
            </div>
        <% } %>
        
        <% if (success) { %>
            <div class="alert alert-success">
                <i class="fas fa-check-circle"></i>
                <%= success %>
            </div>
        <% } %>
        
        <form method="POST" action="/auth/restablecer-password" id="resetForm">
            <input type="hidden" name="token" value="<%= token %>">
            <input type="hidden" name="codigo" value="<%= codigo %>">
            
            <div class="password-requirements">
                <strong>Requisitos de la contraseña:</strong>
                <div class="requirement" id="req-length">
                    <i class="fas fa-circle"></i> Mínimo 8 caracteres
                </div>
                <div class="requirement" id="req-uppercase">
                    <i class="fas fa-circle"></i> Al menos una mayúscula
                </div>
                <div class="requirement" id="req-lowercase">
                    <i class="fas fa-circle"></i> Al menos una minúscula
                </div>
                <div class="requirement" id="req-number">
                    <i class="fas fa-circle"></i> Al menos un número
                </div>
                <div class="requirement" id="req-special">
                    <i class="fas fa-circle"></i> Al menos un carácter especial
                </div>
            </div>
            
            <div class="mb-3">
                <input type="password" 
                       class="form-control" 
                       name="nueva_contraseña" 
                       id="nuevaPassword"
                       placeholder="Nueva contraseña"
                       required
                       autocomplete="new-password">
                
                <div class="password-strength">
                    <div class="strength-bar">
                        <div class="strength-fill" id="strengthFill"></div>
                    </div>
                    <div class="strength-text" id="strengthText">Ingresa tu contraseña</div>
                </div>
            </div>
            
            <div class="mb-3">
                <input type="password" 
                       class="form-control" 
                       name="confirmar_contraseña" 
                       id="confirmarPassword"
                       placeholder="Confirmar nueva contraseña"
                       required
                       autocomplete="new-password">
            </div>
            
            <button type="submit" class="reset-btn" id="resetBtn" disabled>
                <i class="fas fa-save"></i> Cambiar Contraseña
            </button>
        </form>
        
        <a href="/auth/login" class="back-link">
            <i class="fas fa-arrow-left"></i> Volver al inicio de sesión
        </a>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const nuevaPassword = document.getElementById('nuevaPassword');
        const confirmarPassword = document.getElementById('confirmarPassword');
        const resetBtn = document.getElementById('resetBtn');
        const strengthFill = document.getElementById('strengthFill');
        const strengthText = document.getElementById('strengthText');
        
        // Elementos de requisitos
        const reqLength = document.getElementById('req-length');
        const reqUppercase = document.getElementById('req-uppercase');
        const reqLowercase = document.getElementById('req-lowercase');
        const reqNumber = document.getElementById('req-number');
        const reqSpecial = document.getElementById('req-special');
        
        // Función para verificar contraseña
        function verificarContraseña(password) {
            const requirements = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /\d/.test(password),
                special: /[!@#$%^&*(),.?":{}|<>]/.test(password)
            };
            
            // Actualizar indicadores visuales
            reqLength.className = `requirement ${requirements.length ? 'met' : ''}`;
            reqUppercase.className = `requirement ${requirements.uppercase ? 'met' : ''}`;
            reqLowercase.className = `requirement ${requirements.lowercase ? 'met' : ''}`;
            reqNumber.className = `requirement ${requirements.number ? 'met' : ''}`;
            reqSpecial.className = `requirement ${requirements.special ? 'met' : ''}`;
            
            // Actualizar iconos
            reqLength.innerHTML = `<i class="fas fa-${requirements.length ? 'check-circle' : 'circle'}"></i> Mínimo 8 caracteres`;
            reqUppercase.innerHTML = `<i class="fas fa-${requirements.uppercase ? 'check-circle' : 'circle'}"></i> Al menos una mayúscula`;
            reqLowercase.innerHTML = `<i class="fas fa-${requirements.lowercase ? 'check-circle' : 'circle'}"></i> Al menos una minúscula`;
            reqNumber.innerHTML = `<i class="fas fa-${requirements.number ? 'check-circle' : 'circle'}"></i> Al menos un número`;
            reqSpecial.innerHTML = `<i class="fas fa-${requirements.special ? 'check-circle' : 'circle'}"></i> Al menos un carácter especial`;
            
            // Calcular fortaleza
            const metCount = Object.values(requirements).filter(Boolean).length;
            let strength = 'weak';
            let strengthClass = 'strength-weak';
            let strengthTextValue = 'Muy débil';
            
            if (metCount >= 5) {
                strength = 'strong';
                strengthClass = 'strength-strong';
                strengthTextValue = 'Muy fuerte';
            } else if (metCount >= 4) {
                strength = 'good';
                strengthClass = 'strength-good';
                strengthTextValue = 'Buena';
            } else if (metCount >= 3) {
                strength = 'fair';
                strengthClass = 'strength-fair';
                strengthTextValue = 'Regular';
            }
            
            // Actualizar barra de fortaleza
            strengthFill.className = `strength-fill ${strengthClass}`;
            strengthText.textContent = strengthTextValue;
            
            return metCount >= 3; // Mínimo 3 requisitos para considerar válida
        }
        
        // Función para verificar si las contraseñas coinciden
        function verificarCoincidencia() {
            const password = nuevaPassword.value;
            const confirm = confirmarPassword.value;
            
            if (confirm && password !== confirm) {
                confirmarPassword.style.borderColor = '#dc3545';
                return false;
            } else {
                confirmarPassword.style.borderColor = '#e1e5e9';
                return true;
            }
        }
        
        // Función para habilitar/deshabilitar botón
        function actualizarBoton() {
            const passwordValida = verificarContraseña(nuevaPassword.value);
            const coinciden = verificarCoincidencia();
            const confirmLleno = confirmarPassword.value.length > 0;
            
            resetBtn.disabled = !(passwordValida && coinciden && confirmLleno);
        }
        
        // Event listeners
        nuevaPassword.addEventListener('input', actualizarBoton);
        confirmarPassword.addEventListener('input', actualizarBoton);
        
        // Validación del formulario
        document.getElementById('resetForm').addEventListener('submit', function(e) {
            const password = nuevaPassword.value;
            const confirm = confirmarPassword.value;
            
            if (!verificarContraseña(password)) {
                e.preventDefault();
                alert('La contraseña no cumple con los requisitos mínimos');
                return false;
            }
            
            if (password !== confirm) {
                e.preventDefault();
                alert('Las contraseñas no coinciden');
                return false;
            }
            
            // Deshabilitar botón durante envío
            resetBtn.disabled = true;
            resetBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Cambiando...';
        });
    </script>
</body>
</html>
